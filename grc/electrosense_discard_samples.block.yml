# auto-generated by grc.converter

id: electrosense_discard_samples
label: Discard samples
category: '[Electrosense]'

templates:
  imports: import electrosense
  make: electrosense.discard_samples(${test})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
-   id: nsamples
    label: Nsamples
    dtype: int
    default: '100'
-   id: var
    label: Variable
    dtype: int
    default: cfreq
-   id: tag_name
    label: Tag Name
    dtype: raw
    default: pmt.intern("burst_len")
-   id: mode
    label: Mode
    dtype: enum
    options: [varchange, tag]
    option_labels: [Variable, Tag]
    option_attributes:
        tp: ['False', 'True']

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
-   domain: stream
    dtype: complex

outputs:
-   domain: stream
    dtype: complex
asserts:
- ${ nsamples > 0 }

templates:
    imports: import electrosense
    make: electrosense.discard_samples(${nsamples}, ${var}, ${tag_name}, ${mode.tp})
    callbacks:
    - set_nsamples(${nsamples})
    - set_var(${var})

file_format: 1
